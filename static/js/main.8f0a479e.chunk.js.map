{"version":3,"sources":["constants/About.js","constants/Skills.js","constants/Projects.js","components/About/About.js","components/SkillCard/SkillCard.js","components/Skills/Skills.js","components/ProjectCard/ProjectCard.js","components/Projects/Projects.js","components/SectionContainer/SectionContainer.js","components/SideNav/SideNav.js","components/Portfolio/Portfolio.js","components/App.js","serviceWorker.js","index.js"],"names":["about","heading","skills","quote","techSkills","industryKnowledge","interpersonalSkills","projects","projectList","name","description","link","About","props","className","bio","SkillCard","skill","Skills","map","ProjectCard","project","Projects","SectionContainer","handleSectionClick","selectedHeading","selectedQuote","selectedSection","SideNav","src","alt","onClick","Portfolio","App","sectionName","setState","state","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8f0a479e.chunk.js","sourcesContent":["export const about = {\r\n    heading: \"About Me\",\r\n    \"quote\": \"If you love life, don't waste time, \\nfor time is what life is made up of\",\r\n    \"bio\": \"I am a CSE graduate who loves to code and explore new things which comes on the way.\\nI have done my college from Gujarat Technological University.\\nI have done various projects in college, from field including Android development and Machine learning. I have gone to(Along with other team members) to various hackathons like Rajkot Smart City Hackathon, National Science Fair INSEF and AI-based hackathon Vesaithon.\\nApart from my technical skills, I am a quick learner and am ready to learn new technologies.\"\r\n};\r\n","export const skills = {\r\n    heading: \"Skills\",\r\n    quote: \"Build your skills, not your resume\",\r\n    techSkills: [\r\n        \"Python\",\r\n        \"Core Computer Science Fundamentals\",\r\n        \"C++\",\r\n        \"Java\",\r\n        \"Machine Learning\",\r\n        \"NLP\",\r\n        \"Mathematics\"\r\n    ],\r\n    industryKnowledge: [\r\n        \"Problem Solving\",\r\n        \"Backend\",\r\n        \"Web\",\r\n        \"Frontend\"\r\n    ],\r\n    interpersonalSkills: [\r\n        \"Communication\",\r\n        \"Time Management\"\r\n    ]\r\n};\r\n","export const projects = {\r\n    heading: \"Projects\",\r\n    quote: \"Ahh, Learning alone is boring, implementation is the real fun\",\r\n    projectList: [\r\n        {\r\n            name: \"Brain Image Segmentation using U-Net\",\r\n            description: \"Pre-built model :- U-Net\\nBackend:- Keras\\nApi :- Flask\\nFrontend :- HTML, Bootstrap, JS\",\r\n            link: \"Current\"\r\n        }, {\r\n            name: \"Indian Sign Language Interpretation using Deep Learning\",\r\n            description: \"Model :- Yolov3\\nBackend :- Keras\\nApi :- Flask\\nFrontend :- OpenCV, Html, Bootstrap, JS\",\r\n            link: \"http://madhavbahl.tech/react-pokedex/\"\r\n        }, {\r\n            name: \"Heart Disease Prediction using Machine Learning\",\r\n            description: \"ML :- \",\r\n            link: \"http://madhavbahl.tech/react-pokedex/\"\r\n        }, {\r\n            name: \"Project 4\",\r\n            description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\r\n            link: \"http://madhavbahl.tech/react-pokedex/\"\r\n        }, {\r\n            name: \"Project 5\",\r\n            description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\r\n            link: \"http://madhavbahl.tech/react-pokedex/\"\r\n        }, {\r\n            name: \"Project 6\",\r\n            description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\r\n            link: \"http://madhavbahl.tech/react-pokedex/\"\r\n        }, {\r\n            name: \"Project 7\",\r\n            description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\r\n            link: \"http://madhavbahl.tech/react-pokedex/\"\r\n        }, {\r\n            name: \"Project 8\",\r\n            description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\r\n            link: \"http://madhavbahl.tech/react-pokedex/\"\r\n        }, {\r\n            name: \"Project 9\",\r\n            description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\r\n            link: \"http://madhavbahl.tech/react-pokedex/\"\r\n        }\r\n    ]\r\n}\r\n","import React from 'react';\nimport {about} from './../../constants/About';\nimport './about.css';\n\nexport const About = (props) => {\n    return (\n        <div className=\"about-container\">\n            { about.bio }\n        </div>\n    )\n}","import React from 'react';\r\n\r\nimport './skill-card.css';\r\n\r\nexport const SkillCard = ({ skill }) => {\r\n    return (\r\n        <div className=\"skill-card\">\r\n            {skill}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { SkillCard } from '../SkillCard/SkillCard';\r\n\r\nimport {skills} from './../../constants/Skills';\r\n\r\nimport './skills.css';\r\n\r\nexport const Skills = (props)  =>  {\r\n    return (\r\n        <div className=\"skills-container\">\r\n            <h3>Tech Knowledge</h3>\r\n\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    skills.techSkills.map (skill => <SkillCard skill={skill} />)\r\n                }\r\n            </div>\r\n\r\n            <h3>Industry Knowledge</h3>\r\n\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    skills.industryKnowledge.map (skill => <SkillCard skill={skill} />)\r\n                }\r\n            </div>\r\n\r\n            <h3>Interpersonal Skills</h3>\r\n\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    skills.interpersonalSkills.map (skill => <SkillCard skill={skill} />)\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport './project-card.css';\r\n\r\nexport const ProjectCard = ({ project }) => {\r\n    return (\r\n        <div className=\"project-card\">\r\n            <p><b>Name:</b> {project.name}</p>\r\n            <p><b>Description:</b> {project.description}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport { ProjectCard } from './../ProjectCard/ProjectCard';\r\n\r\nimport './projects.css';\r\n\r\nexport const Projects = ({ projects }) => {\r\n    return (\r\n        <div className=\"projects-container\">\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    projects.projectList.map(project => <ProjectCard project={project} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { About } from '../About/About';\r\nimport { Skills } from '../Skills/Skills';\r\nimport { Projects } from '../Projects/Projects';\r\n\r\nimport './section-container.css';\r\n\r\nexport const SectionContainer = ({ handleSectionClick, about, skills, projects, selectedHeading, selectedQuote, selectedSection }) => {\r\n    return (\r\n        <div className=\"section-container\">\r\n            <div className=\"section-heading-container\">\r\n    <h1 className=\"main-heading\">{ selectedHeading }</h1>\r\n    <p className=\"main-quote\">{ selectedQuote }</p>\r\n            </div>\r\n\r\n            <div className=\"section-component\">\r\n                {\r\n                    {\r\n                        about: <About />,\r\n                        skills: <Skills />,\r\n                        projects: <Projects projects={projects} />\r\n                    }[selectedSection]\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './sidenav.css';\r\n\r\nexport const SideNav = ({ handleSectionClick }) => {\r\n    return (\r\n        <div className=\"sidenav\">\r\n            <img\r\n                src=\"Devansh3.jpeg\"\r\n                className=\"avatar\"\r\n                alt=\"avatar\" />\r\n\r\n            <h2 className=\"main-name\">Devansh Choudaha</h2>\r\n            <p className=\"subtitle\">\"Engender as a software engineer\"</p>\r\n            <div className=\"sections-list\">\r\n                <p className=\"section-list-element\" onClick={() => handleSectionClick('about')} >About Me</p>\r\n                <p className=\"section-list-element\" onClick={() => handleSectionClick('skills')} >Skills</p>\r\n                <p className=\"section-list-element\" onClick={() => handleSectionClick('projects')} >Projects</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport { SectionContainer } from '../SectionContainer/SectionContainer';\nimport { SideNav } from '../SideNav/SideNav';\n\nimport './portfolio.css';\n\nexport const Portfolio = ({ handleSectionClick, about, skills, projects, selectedHeading, selectedQuote, selectedSection }) => {\n    return (\n        <div className=\"portfolio-container\">\n            <div className=\"sidenav-container\">\n                <SideNav \n                    handleSectionClick={handleSectionClick}/>\n            </div>\n\n            <div className=\"main-section-container\">\n                <SectionContainer \n                    about={about}\n                    skills={skills}\n                    projects={projects}\n\t\t\t\t\tselectedSection={selectedSection}\n\t\t\t\t\tselectedHeading={selectedHeading}\n\t\t\t\t\tselectedQuote={selectedQuote} />\n            </div>\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport { about } from '../constants/About';\nimport { skills } from './../constants/Skills';\nimport { projects } from './../constants/Projects';\nimport './App.css';\nimport { Portfolio } from './Portfolio/Portfolio';\n\nexport class App extends Component {\n\tconstructor(){\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tselectedSection: \"\",\n\t\t\tselectedHeading: \"\",\n\t\t\tselectedQuote: \"\",\n\t\t\tabout: null,\n\t\t\tskills: null\n\t\t}\n\t}\n\n\tcomponentDidMount () {\n\t\tthis.setState({\n\t\t\tselectedSection: \"about\",\n\t\t\tabout,\n\t\t\tskills,\n\t\t\tprojects,\n\t\t\tselectedHeading: about.heading,\n\t\t\tselectedQuote: about.quote\n\t\t})\n\t}\n\n\thandleSectionClick = (sectionName) => {\n\t\tthis.setState({\n\t\t\tselectedSection: sectionName,\n\t\t\tselectedHeading: this.state[sectionName].heading,\n\t\t\tselectedQuote: this.state[sectionName].quote\n\t\t})\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Portfolio\n\t\t\t\t\tabout={this.state.about}\n\t\t\t\t\tskills={this.state.skills}\n\t\t\t\t\tprojects={this.state.projects}\n\t\t\t\t\tselectedSection={this.state.selectedSection}\n\t\t\t\t\tselectedHeading={this.state.selectedHeading}\n\t\t\t\t\tselectedQuote={this.state.selectedQuote}\n\t\t\t\t\thandleSectionClick={this.handleSectionClick}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}